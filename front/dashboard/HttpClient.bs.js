// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Fetch from "bs-fetch/src/Fetch.js";

function $$fetch$1(endpoint, $staropt$star, $staropt$star$1, body, headers, param) {
  var baseUrl = $staropt$star !== undefined ? $staropt$star : process.env.API_URL;
  var method_ = $staropt$star$1 !== undefined ? $staropt$star$1 : /* Get */0;
  return fetch(baseUrl + endpoint, Fetch.RequestInit[/* make */0](method_, headers, body, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* () */0)).then((function (response) {
                return Promise.resolve(/* Success */[response]);
              }));
}

function fetchJson(endpoint, $staropt$star, $staropt$star$1, decoder, headers, body, param) {
  var baseUrl = $staropt$star !== undefined ? $staropt$star : process.env.API_URL;
  var method_ = $staropt$star$1 !== undefined ? $staropt$star$1 : /* Get */0;
  return $$fetch$1(endpoint, baseUrl, method_, body, headers, /* () */0).then((function (result) {
                if (typeof result === "number") {
                  return Promise.resolve(/* Failed */2);
                } else {
                  return result[0].json().then((function (json) {
                                  return Promise.resolve(Curry._1(decoder, json));
                                })).then((function (res) {
                                return Promise.resolve(/* Success */[res]);
                              }));
                }
              }));
}

export {
  $$fetch$1 as $$fetch,
  fetchJson ,
  
}
/* No side effect */
